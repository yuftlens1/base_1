#函数的参数写法有4种  1.位置参数 2.关键字参数 3.缺省参数 4.不定长参数

#位置参数: 传递和定义参数的顺序和个数必须一致。     之前学的函数里的参数都是这个嘿嘿
def test1(name,age,gender):    #定义形参
    print(f'姓名{name},年龄{age},性别{gender}.') #引用形参
test1('yuft',24,'男')  #把参数传入形参。   # 因为函数里是print，不是return。所以不用赋到变量里去输出。
#以上test1传参的时候只能传三个，位置参数少一报错。

#关键字参数:
def test2(name,age,gender):    #定义形参
    print(f'姓名{name},年龄{age},性别{gender}.') #引用形参
test2('yuft2',gender='男',age=24)    #关键字参数传递时指定执行函数里的形参,不需要注意形参的顺序。
#如果传参的时候需要位置参数和关键字参数的话，位置参数必须在前！！！

#缺省参数(默认参数)
def test3(name,age,gender='男'):    #定义形参
    print(f'姓名{name},年龄{age},性别{gender}.') #引用形参
test3('yuft3',age=24)               #这里只传入两个参数就可以了.
test3('yuft4',age=24,gender='女')     #如果在有了缺省参数(默认参数)，在调用函数的时候还传入了，结果会显示调用时传入的。

#不定长参数
#不定长参数有两大分类  (包裹位置传递，包裹关键字传递)
#包裹位置传递 就是接受所有的位置参数。
def test4(*args):
    print(f'{args}')
test4('yuft5')
test4('yuft6',20,'男')
test4()      #直接返回空元组

#包裹关键字传递 就是接受关键字参数
def test5(**kwargs):
    print(f'{kwargs}')
test5(name = 'tom',age = 20)   #{'name': 'tom', 'age': 20} 结果会以字典的形式打印出来。 形参不能加引号。
#无论 包裹位置传递还是包裹关键字传递，都是一个组包的过程。
#零散的数据组合在一起就叫组包。







